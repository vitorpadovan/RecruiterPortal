services:
  recruiterportal:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      # - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__PostgreSql=Host=postgresrecruiter;Database=postgres;Username=postgres;Password=123
    ports:
      - "8080:8080"
      # - "8081"docke
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
  postgresrecruiter:
    image: 'postgres:alpine'
    container_name: postgresrecruiter
    # restart: always
    ports:
      - '5432:5432'
    environment:
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=123'
      - 'POSTGRES_DB=inicial'
      - 'PGDATA=/var/lib/postgresql/data/pgdata'
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready"]
    #   interval: 5s
    #   timeout: 10s
    #   retries: 15
    volumes:
      - '~/recruiter/data:/var/lib/postgresql/data'
      - '~/recruiter/init-script:/docker-entrypoint-initdb.d/'